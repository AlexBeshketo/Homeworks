{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Juniorplus.tsx","p2-homeworks/h5/Routes1.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","PATH","Header","useState","active","setActive","className","p","main","block","to","props","isActive","link","onClick","box","Message","text","setText","messages","setMessage","console","log","today","Date","toString","button","value","textarea","onChange","event","target","btn","newMessage","avatar","name","message","time","substring","type","map","item","chat__message","img","src","width","height","message_item","messageData","HW1","Affair","padding","priority","btn2","deleteAffairCallback","affair","id","Affairs","setFilter","mappedAffairs","data","a","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","t","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","users","inputClass","s","addData","usersName","substr","usersnumber","GreetingContainer","addUserCallback","setName","setError","length","e","currentTarget","trim","HW3","setUsers","user","v1","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","showAlert","alert","setChecked","column","testSpanError","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","previousValue","setPreviousValue","undefined","newvalue","PreJunior","Error404","Junior","Juniorplus","Routes1","path","element","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c61828b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__1jhOt\",\"active\":\"Header_active__3frNu\",\"box\":\"Header_box__Ek9aT\",\"main\":\"Header_main__2xrzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Message_main__UakNf\",\"text_button\":\"Message_text_button__GXywP\",\"textarea\":\"Message_textarea__3VlLu\",\"btn\":\"Message_btn__1fgE0\",\"chat__message\":\"Message_chat__message__1u8EA\",\"message\":\"Message_message__1bIbb\",\"name\":\"Message_name__TwhOY\",\"time\":\"Message_time__2niCz\",\"message_item\":\"Message_message_item__2bxwL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"padding\":\"Affairs_padding__3l35N\",\"main\":\"Affairs_main__3NypA\",\"btn\":\"Affairs_btn__2uKUu\",\"btn2\":\"Affairs_btn2__1U8cX\",\"priority\":\"Affairs_priority__38lTZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__231yO\",\"error-class\":\"Greeting_error-class__1iPfv\",\"error-text\":\"Greeting_error-text__34szF\",\"input\":\"Greeting_input__2_nFW\",\"btn\":\"Greeting_btn__2WJMr\",\"btn_text\":\"Greeting_btn_text__K25nU\",\"usersnumber\":\"Greeting_usersnumber__2HgTW\",\"usersName\":\"Greeting_usersName__XozVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1lLDQ\",\"superInput\":\"SuperInputText_superInput__1Pycf\",\"errorInput\":\"SuperInputText_errorInput__16QiU\",\"error\":\"SuperInputText_error__2X4_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1caVB\",\"column\":\"HW4_column__1Juoz\",\"testSpanError\":\"HW4_testSpanError__3fC3e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__1-3_6\",\"red\":\"SuperButton_red__39SWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__10fHj\",\"spanClassName\":\"SuperCheckbox_spanClassName__2XUsI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3A9-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__8Zxjt\"};","import React, {useState} from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport p from './Header.module.css'\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_plus: '/juniorplus',\r\n\r\n    // add paths\r\n}\r\n\r\n\r\nfunction Header() {\r\n    // let [isTrue, setIsTrue]=useState<boolean>(true)\r\n\r\n    const[active,setActive]=useState(false)\r\n    const onClickHandler= ()=>{\r\n       setActive(!active)\r\n    }\r\n\r\n    return (\r\n\r\n        <div  className={`${p.main}  ${active? p.active: ''}`}>\r\n\r\n\r\n            <div className={p.block}>\r\n\r\n                <NavLink to={PATH.PRE_JUNIOR}   className= {props => props.isActive? p.active : p.link}>PreJunior </NavLink>\r\n                <NavLink to={PATH.JUNIOR} className={props => props.isActive ?  p.active : p.link}>Junior</NavLink>\r\n                <NavLink to={PATH.JUNIOR_plus} className={props => props.isActive ?  p.active : p.link}>Junior+  </NavLink>\r\n\r\n                    <div  onClick={onClickHandler} className={p.box}/>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {useState} from 'react'\r\nimport p from './Message.module.css'\r\n\r\nexport type MessagePropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\n\r\nfunction Message(props: MessagePropsType) {\r\n\r\n    const [text, setText] = useState('');\r\n    // const  [message, setMessage] = useState('Message #1');\r\n\r\n    const [messages, setMessage] = useState<MessagePropsType[]>([])\r\n\r\n    console.log(messages)\r\n\r\n    let today= new Date().toString()\r\n\r\n    const onClickHandler = () => {\r\n        const newMessage: MessagePropsType = {\r\n            avatar: props.avatar,\r\n            name: 'Albina',\r\n            message: text,\r\n            time: (today.substring(0,25 ))\r\n        }\r\n        setMessage([...messages, newMessage])\r\n        setText('')\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={p.main}>\r\n            <div className={p.button}>\r\n            <textarea value={text} className={p.textarea} onChange={(event) => {\r\n                setText(event.target.value)\r\n            }}>  </textarea>\r\n                <div>\r\n                <button className={p.btn} onClick={onClickHandler} type='submit'>Send message\r\n                </button>\r\n                </div>\r\n                <div/>\r\n\r\n\r\n                {messages.map((item) => {\r\n                    return <div className={p.chat__message}>\r\n                        <div className={p.message}>\r\n                            <div className={p.name}> {item.name} </div>\r\n                            <img className={p.img} src={item.avatar} width='100px' height='100'/>\r\n                            <div className={p.time}> {item.time} </div>\r\n                            <div className={p.message_item} >{item.message}</div>\r\n                        </div>\r\n                        {/*<div className={p.message}> {message ? text :props.message } </div>*/}\r\n\r\n                    </div>\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\n\r\n\r\n\r\nfunction HW1(props: any) {\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <Message avatar={messageData.avatar}\r\n               name={messageData.name}\r\n               message={messageData.message}\r\n             time={messageData.time}\r\n                     />\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport p from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair:  {\r\n        id:number\r\n        name:string\r\n        priority: string\r\n    }\r\n    name:string\r\n    priority: string\r\n      // need to fix any\r\n    deleteAffairCallback: (a:number)=>void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair.id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <>\r\n            <div className={p.padding}>\r\n        <div className={p.main}>\r\n           <span>  {props.name} </span>\r\n            <span className={p.priority}>{props.priority}</span>\r\n\r\n            <button  className={p.btn2} onClick={deleteCallback}>X</button>\r\n        </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport p from './Affairs.module.css'\r\n\r\nexport type AffairsPropsType = { // need to fix any\r\n    data: any\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (arg0: number) => void\r\n}\r\n\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const {setFilter} = props;\r\n\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            priority={a.priority}\r\n            name={a.name}// should work\r\n            key={a.id}            // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={p.btn} onClick={setAll}> All</button>\r\n            <button className={p.btn} onClick={setHigh}> High</button>\r\n            <button className={p.btn} onClick={setMiddle}> Middle</button>\r\n            <button className={p.btn} onClick={setLow}> Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' |'low' |'middle'\r\n\r\nexport type AffairType = {\r\n    id:number\r\n    name:string\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {id: 1, name: 'React', priority: 'high'},\r\n    {id: 2, name: 'anime', priority: 'low'},\r\n    {id: 3, name: 'games', priority: 'low'},\r\n    {id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all' ) {\r\n        return affairs;\r\n    }\r\n    return affairs.filter(el => el.priority === filter)\r\n}\r\n    // need to fix\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, id: number): Array<AffairType>  => { // need to fix any\r\n   return affairs.filter(t=> t.id !== id )\r\n    // need to fix\r\n\r\n}\r\n\r\nexport function HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (id: number) => setAffairs(deleteAffair(affairs, id)) // need to fix any\r\n\r\n    const setFilterHandler = (filter:FilterType)=> {\r\n        setFilter(filter)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilterHandler}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react'\r\nimport {UsersType} from \"./HW3\";\r\nimport s from './Greeting.module.css'\r\n\r\nexport type GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string | null // need to fix any\r\n    totalUsers: number // need to fix any\r\n    users: UsersType\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, users} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? <span className={s['error-text']}>{error}</span> : '';\r\n\r\n    const addData =\r\n        users.map(p => {\r\n                return <div>\r\n                    <span> Name :</span>\r\n                    <span className={s.usersName}>{p.name}</span>\r\n                    <span className={s.id}> ID :{p.id.substr(0,5)}</span>\r\n                </div>\r\n            }\r\n        )\r\n\r\n    return (\r\n\r\n            <div>\r\n                <input value={name} onChange={setNameCallback} className={error ? s['error-class'] : s['input']}/>\r\n                <button className={s.btn} onClick={addUser}>Add</button>\r\n\r\n                <span className={s.usersnumber}>Users :{totalUsers}</span>\r\n\r\n                <div>{inputClass}</div>\r\n\r\n                <div>{addData}</div>\r\n\r\n            </div>\r\n            )\r\n            }\r\n\r\n            export default Greeting\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UsersType} from \"./HW3\";\r\n// import Any = jasmine.Any;\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UsersType // need to fix any\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback},) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<null| string>('') // need to fix any\r\n    //\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        setName((e.currentTarget.value)) // need to fix\r\n    }\r\n    const addUser = () => {\r\n        if (name.trim() !== '') {\r\n            addUserCallback(name)\r\n            setName('')\r\n            setError(null)\r\n        }\r\n        else {setError('Name is not defined')}\r\n    };\r\n\r\n    // const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    //     setError(null)\r\n    //     if (e.charCode === 13) {\r\n    //         addUser();\r\n    //     }\r\n    // }\r\n\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            users={users}\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            // onKeyPressHandler={onKeyPressHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UsersType = Array<UserType>\r\nexport type UserType= {\r\n    id: string ,\r\n    name: string\r\n}\r\n\r\n\r\n\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UsersType>([]) // need to fix any\r\n\r\n    const addUserCallback = (name:string) => {\r\n        const user:UserType= {id: v1(), name: name}// need to fix any\r\n        setUsers([  ...users, user]) // need to fix\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName =  `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error? s.errorInput : s.superInput } ` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default}  ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        onChange // если есть пропс onChange\r\n        && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n\r\n\r\n\r\n\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                   spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    Apply\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red// пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                             disabled>\r\n\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    Checked {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport p from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${p.span} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n    const [previousValue, setPreviousValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        setPreviousValue(value)\r\n        saveState<string>('editable-span-value', value)\r\n        saveState<string>('editable-span-previous',previousValue )\r\n    }\r\n    const restore = () => {\r\n      let newvalue =  restoreState<string>('editable-span-previous',value)\r\n        setValue(newvalue)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            {/*homeworks 6*/}\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            {/*<HW7/>*/}\r\n            {/*<HW8/>*/}\r\n            {/*<HW9/>*/}\r\n            {/*<HW10/>*/}\r\n            {/*/!*<HW6/>*!/*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Junior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction Juniorplus () {\r\n    return (\r\n        <div>\r\n            {/*<HW7/>*/}\r\n            {/*<HW8/>*/}\r\n            {/*<HW9/>*/}\r\n            {/*<HW10/>*/}\r\n            {/*/!*<HW6/>*!/*/}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Juniorplus\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\n\r\nimport Junior from \"./pages/Junior\";\r\nimport Juniorplus from \"./pages/Juniorplus\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_plus: '/juniorplus',\r\n\r\n    // add paths\r\n}\r\n\r\nfunction Routes1() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Routes>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'}  element={<PreJunior/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                <Route path={PATH.JUNIOR_plus} element={<Juniorplus/>}/>\r\n\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route element={<Error404/>}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes1\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes1 from './Routes1'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes1/>\r\n\r\n           </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\n\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}